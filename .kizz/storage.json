{"files":"[{\"path\":\"doc/design/about-generator.md\",\"simhash\":[1,1,1,0,0,1,0,1,1,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,1,1,0,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,1,1,0,1,1,0,1,1,1,0,1,1,1,1,0,0,0,0,1,1,0,1,0,0,1,1,0,0,1,0,1,0,1,0,1,1,1,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,1,1,1,0,1,1,0,1],\"creationTime\":\"2014-08-29 17:35:24 +08:00\",\"modificationTime\":\"2014-08-29 17:35:24 +08:00\",\"content\":\"<h1 id=\\\"关于-generator\\\">关于 Generator</h1>\\n<p>Async, Promise, Generator 是 Javascript 三种语法。</p>\\n<p>虽然 generator 现在刚刚开始发展，但是我还是更加看好它，因为它很自然。</p>\\n<p>当然还是有 Async Functions 就是啦。 不过离 ES7 还远着呢，而且似乎社区现在也没有大量这方面的支持， 所以在很长的一段时间内 kizz 都会使用 generator。</p>\\n<p>Kizz 不介意破坏性改变，只要真的能够有所提升。</p>\\n<h2 id=\\\"跳出流程控制\\\">跳出流程控制</h2>\\n<p>一个函数控制整个流程。 关于这个，当然用传统的方式也是可以做到的。 不过我是觉得看上去没有用 Generator 要来得自然就是了。</p>\\n<h3 id=\\\"callback-version\\\">callback version</h3>\\n<pre class=\\\"sourceCode javascript\\\"><code class=\\\"sourceCode javascript\\\"><span class=\\\"ot\\\">app</span>.<span class=\\\"fu\\\">use</span>(context, next) {\\n    <span class=\\\"co\\\">// do sth</span>\\n    <span class=\\\"kw\\\">var</span> afterNext = <span class=\\\"kw\\\">function</span>() {\\n        <span class=\\\"co\\\">// do sth later</span>\\n    }\\n    <span class=\\\"fu\\\">next</span>(context, afterNext);\\n}</code></pre>\\n<h3 id=\\\"promise-versioin\\\">promise versioin</h3>\\n<pre class=\\\"sourceCode javascript\\\"><code class=\\\"sourceCode javascript\\\"><span class=\\\"ot\\\">app</span>.<span class=\\\"fu\\\">use</span>(context, next) {\\n    <span class=\\\"co\\\">// do sth</span>\\n    <span class=\\\"co\\\">// next take context &amp; generate a new promise</span>\\n    <span class=\\\"fu\\\">next</span>(context).<span class=\\\"fu\\\">then</span>(<span class=\\\"kw\\\">function</span>() {\\n        <span class=\\\"co\\\">// do sth later</span>\\n    });\\n}</code></pre>\\n<h2 id=\\\"异步到同步的转变\\\">异步到同步的转变</h2>\\n<p><code>co</code> 这个库简化了异步的书写、提供了真正能用的 try catch 支持。</p>\\n<p>脱离了大量的 callback，代码就变得直白了起来。 （关于 Error Handle，NodeJS也提供了这个：http://nodejs.org/api/domain.html）</p>\\n<p>官方的例子：</p>\\n<pre class=\\\"sourceCode javascript\\\"><code class=\\\"sourceCode javascript\\\"><span class=\\\"kw\\\">var</span> co = <span class=\\\"fu\\\">require</span>(<span class=\\\"st\\\">&#39;co&#39;</span>);\\n<span class=\\\"kw\\\">var</span> thunkify = <span class=\\\"fu\\\">require</span>(<span class=\\\"st\\\">&#39;thunkify&#39;</span>);\\n<span class=\\\"kw\\\">var</span> request = <span class=\\\"fu\\\">require</span>(<span class=\\\"st\\\">&#39;request&#39;</span>);\\n<span class=\\\"kw\\\">var</span> get = <span class=\\\"fu\\\">thunkify</span>(<span class=\\\"ot\\\">request</span>.<span class=\\\"fu\\\">get</span>);\\n\\n<span class=\\\"fu\\\">co</span>(<span class=\\\"kw\\\">function</span> *(){\\n  <span class=\\\"kw\\\">var</span> a = <span class=\\\"kw\\\">yield</span> <span class=\\\"fu\\\">get</span>(<span class=\\\"st\\\">&#39;http://google.com&#39;</span>);\\n  <span class=\\\"kw\\\">var</span> b = <span class=\\\"kw\\\">yield</span> <span class=\\\"fu\\\">get</span>(<span class=\\\"st\\\">&#39;http://yahoo.com&#39;</span>);\\n  <span class=\\\"kw\\\">var</span> c = <span class=\\\"kw\\\">yield</span> <span class=\\\"fu\\\">get</span>(<span class=\\\"st\\\">&#39;http://cloudup.com&#39;</span>);\\n  <span class=\\\"ot\\\">console</span>.<span class=\\\"fu\\\">log</span>(a[<span class=\\\"dv\\\">0</span>].<span class=\\\"fu\\\">statusCode</span>);\\n  <span class=\\\"ot\\\">console</span>.<span class=\\\"fu\\\">log</span>(b[<span class=\\\"dv\\\">0</span>].<span class=\\\"fu\\\">statusCode</span>);\\n  <span class=\\\"ot\\\">console</span>.<span class=\\\"fu\\\">log</span>(c[<span class=\\\"dv\\\">0</span>].<span class=\\\"fu\\\">statusCode</span>);\\n})()\\n\\n<span class=\\\"fu\\\">co</span>(<span class=\\\"kw\\\">function</span> *(){\\n  <span class=\\\"kw\\\">var</span> a = <span class=\\\"fu\\\">get</span>(<span class=\\\"st\\\">&#39;http://google.com&#39;</span>);\\n  <span class=\\\"kw\\\">var</span> b = <span class=\\\"fu\\\">get</span>(<span class=\\\"st\\\">&#39;http://yahoo.com&#39;</span>);\\n  <span class=\\\"kw\\\">var</span> c = <span class=\\\"fu\\\">get</span>(<span class=\\\"st\\\">&#39;http://cloudup.com&#39;</span>);\\n  <span class=\\\"kw\\\">var</span> res = <span class=\\\"kw\\\">yield</span> [a, b, c];\\n  <span class=\\\"ot\\\">console</span>.<span class=\\\"fu\\\">log</span>(res);\\n})()\\n\\n<span class=\\\"co\\\">// Error handling</span>\\n\\n<span class=\\\"fu\\\">co</span>(<span class=\\\"kw\\\">function</span> *(){\\n  <span class=\\\"kw\\\">try</span> {\\n    <span class=\\\"kw\\\">var</span> res = <span class=\\\"kw\\\">yield</span> <span class=\\\"fu\\\">get</span>(<span class=\\\"st\\\">&#39;http://badhost.invalid&#39;</span>);\\n    <span class=\\\"ot\\\">console</span>.<span class=\\\"fu\\\">log</span>(res);\\n  } <span class=\\\"kw\\\">catch</span>(e) {\\n    <span class=\\\"ot\\\">console</span>.<span class=\\\"fu\\\">log</span>(<span class=\\\"ot\\\">e</span>.<span class=\\\"fu\\\">code</span>) <span class=\\\"co\\\">// ENOTFOUND</span>\\n }\\n})()</code></pre>\\n\",\"title\":\"关于 Generator\",\"tags\":[\"kizz\",\"api\",\"gener\"]},{\"path\":\"doc/developer/API.md\",\"simhash\":[1,1,0,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,0,0,1,1,0,1,1,1,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,1,1,0,0,1,0,1,0,0,1,1,1,1,1,0,1,1,0,1,0,0,0,1,1,0,1,0,1,1,0,0,1,0,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,1,0,1,1,1,0,0,0,1,0],\"creationTime\":\"2014-08-29 17:35:24 +08:00\",\"modificationTime\":\"2014-08-29 17:35:24 +08:00\",\"content\":\"<h2 id=\\\"this\\\">This</h2>\\n<h3 id=\\\"load-order\\\">load order</h3>\\n<ul>\\n<li><p>this.logger</p></li>\\n<li><p>this.config, this.storage</p></li>\\n<li><p>this.newFiles, this.changedFiles, this.unchangedFiles, this.removedFiles</p></li>\\n</ul>\\n<h3 id=\\\"this.logger\\\">this.logger</h3>\\n<pre><code>this.logger.trace(&#39;Entering cheese testing&#39;);\\nthis.logger.debug(&#39;Got cheese.&#39;);\\nthis.logger.info(&#39;Cheese is Gouda.&#39;);\\nthis.logger.warn(&#39;Cheese is quite smelly.&#39;);\\nthis.logger.error(&#39;Cheese is too ripe!&#39;);\\nthis.logger.fatal(&#39;Cheese was breeding ground for listeria.&#39;);</code></pre>\\n<p>see also: https://github.com/nomiddlename/log4js-node</p>\\n<h3 id=\\\"this.storage\\\">this.storage</h3>\\n<pre class=\\\"sourceCode javascript\\\"><code class=\\\"sourceCode javascript\\\"><span class=\\\"kw\\\">var</span> str = <span class=\\\"kw\\\">this</span>.<span class=\\\"ot\\\">storage</span>.<span class=\\\"fu\\\">getItem</span>(<span class=\\\"st\\\">&#39;key&#39;</span>);\\n<span class=\\\"kw\\\">this</span>.<span class=\\\"ot\\\">storage</span>.<span class=\\\"fu\\\">setItem</span>(<span class=\\\"st\\\">&#39;key2&#39;</span>, <span class=\\\"st\\\">&#39;STRING&#39;</span>);</code></pre>\\n<h3 id=\\\"this.cache\\\">this.cache</h3>\\n<pre class=\\\"sourceCode javascript\\\"><code class=\\\"sourceCode javascript\\\"><span class=\\\"kw\\\">var</span> str = <span class=\\\"kw\\\">this</span>.<span class=\\\"ot\\\">cache</span>.<span class=\\\"fu\\\">getItem</span>(<span class=\\\"st\\\">&#39;key&#39;</span>);\\n<span class=\\\"kw\\\">this</span>.<span class=\\\"ot\\\">cache</span>.<span class=\\\"fu\\\">setItem</span>(<span class=\\\"st\\\">&#39;key2&#39;</span>, <span class=\\\"st\\\">&#39;STRING&#39;</span>);</code></pre>\\n<h3 id=\\\"this.newfiles\\\">this.newFiles</h3>\\n<pre class=\\\"sourceCode javascript\\\"><code class=\\\"sourceCode javascript\\\">[\\n    {\\n        <span class=\\\"dt\\\">path</span>: <span class=\\\"st\\\">&#39;path of file A&#39;</span>,\\n        <span class=\\\"dt\\\">modificationTime</span>: <span class=\\\"st\\\">&#39;YYYY-MM-DD H:mm:ss Z&#39;</span>,\\n        <span class=\\\"dt\\\">creationTime</span>: <span class=\\\"st\\\">&#39;YYYY-MM-DD H:mm:ss Z&#39;</span>\\n    },\\n    {}\\n]</code></pre>\\n<h3 id=\\\"this.changedfiles\\\">this.changedFiles</h3>\\n<pre class=\\\"sourceCode javascript\\\"><code class=\\\"sourceCode javascript\\\">[\\n    {\\n        <span class=\\\"dt\\\">path</span>: <span class=\\\"st\\\">&#39;path of file A&#39;</span>,\\n        <span class=\\\"dt\\\">modificationTime</span>: <span class=\\\"st\\\">&#39;YYYY-MM-DD H:mm:ss Z&#39;</span>,\\n        <span class=\\\"dt\\\">creationTime</span>: <span class=\\\"st\\\">&#39;YYYY-MM-DD H:mm:ss Z&#39;</span>\\n    },\\n    {}\\n]</code></pre>\\n<h3 id=\\\"this.unchangedfiles\\\">this.unchangedFiles</h3>\\n<pre class=\\\"sourceCode javascript\\\"><code class=\\\"sourceCode javascript\\\">[\\n    {\\n        <span class=\\\"dt\\\">path</span>: <span class=\\\"st\\\">&#39;path of file A&#39;</span>,\\n        <span class=\\\"dt\\\">modificationTime</span>: <span class=\\\"st\\\">&#39;YYYY-MM-DD H:mm:ss Z&#39;</span>,\\n        <span class=\\\"dt\\\">creationTime</span>: <span class=\\\"st\\\">&#39;YYYY-MM-DD H:mm:ss Z&#39;</span>,\\n        <span class=\\\"dt\\\">content</span>: <span class=\\\"st\\\">&quot;html&quot;</span>, <span class=\\\"co\\\">// by kizz-markdown</span>\\n        <span class=\\\"dt\\\">title</span>: <span class=\\\"st\\\">&quot;title&quot;</span>, <span class=\\\"co\\\">// by kizz-markdown</span>\\n        <span class=\\\"dt\\\">tags</span>: [<span class=\\\"st\\\">&quot;tag1&quot;</span>, <span class=\\\"st\\\">&quot;tag2&quot;</span>] <span class=\\\"co\\\">// front yaml or kizz-guess-tags</span>\\n    },\\n    {}\\n]</code></pre>\\n<h3 id=\\\"this.removedfiles\\\">this.removedFiles</h3>\\n<pre class=\\\"sourceCode javascript\\\"><code class=\\\"sourceCode javascript\\\">[\\n    {\\n        <span class=\\\"dt\\\">path</span>: <span class=\\\"st\\\">&#39;path of file A&#39;</span>,\\n        <span class=\\\"dt\\\">modificationTime</span>: <span class=\\\"st\\\">&#39;YYYY-MM-DD H:mm:ss Z&#39;</span>,\\n        <span class=\\\"dt\\\">creationTime</span>: <span class=\\\"st\\\">&#39;YYYY-MM-DD H:mm:ss Z&#39;</span>,\\n        <span class=\\\"dt\\\">content</span>: <span class=\\\"st\\\">&quot;html&quot;</span>, <span class=\\\"co\\\">// by kizz-markdown</span>\\n        <span class=\\\"dt\\\">title</span>: <span class=\\\"st\\\">&quot;title&quot;</span>, <span class=\\\"co\\\">// by kizz-markdown</span>\\n        <span class=\\\"dt\\\">tags</span>: [<span class=\\\"st\\\">&quot;tag1&quot;</span>, <span class=\\\"st\\\">&quot;tag2&quot;</span>] <span class=\\\"co\\\">// front yaml or kizz-guess-tags</span>\\n    },\\n    {}\\n]</code></pre>\\n\",\"title\":\"API\",\"tags\":[\"kizz\",\"api\"]},{\"path\":\"doc/developer/middleware-guild.md\",\"simhash\":[1,0,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,0,0,1,1,1,1,1,0,0,1,1,0,0,0,1,0,1,0,1,0,0,1,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,1,0,0,1,1,0,1,0,1,1,1,1,1,1,0,1,0,0,0,0,0,1,1,0,1,0,1,1,1,0,1,0,0,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,1,0,0],\"creationTime\":\"2014-08-29 17:35:24 +08:00\",\"modificationTime\":\"2014-08-29 17:35:24 +08:00\",\"content\":\"<h1 id=\\\"middleware-guide\\\">Middleware Guide</h1>\\n<h2 id=\\\"create-plugin\\\">create plugin</h2>\\n<pre><code>mkdir kizz-helloworld\\ncd kizz-helloworld</code></pre>\\n<h3 id=\\\"create-package.json\\\">create package.json</h3>\\n<pre><code>npm init</code></pre>\\n<h3 id=\\\"create-index.js\\\">create index.js</h3>\\n<pre><code>gedit index.js</code></pre>\\n<pre class=\\\"sourceCode javascript\\\"><code class=\\\"sourceCode javascript\\\"><span class=\\\"ot\\\">module</span>.<span class=\\\"fu\\\">exports</span> = <span class=\\\"kw\\\">function</span>(app) {\\n    <span class=\\\"ot\\\">app</span>.<span class=\\\"fu\\\">when</span>(<span class=\\\"kw\\\">function</span> *() {\\n        <span class=\\\"kw\\\">return</span> <span class=\\\"kw\\\">true</span>;\\n    }).<span class=\\\"fu\\\">use</span>(<span class=\\\"kw\\\">function</span> *(next) {\\n        <span class=\\\"ot\\\">console</span>.<span class=\\\"fu\\\">log</span>(<span class=\\\"st\\\">&quot;Hello World&quot;</span>);\\n        <span class=\\\"kw\\\">yield</span> next;\\n    });\\n}</code></pre>\\n<h3 id=\\\"npm-link\\\">npm link</h3>\\n<pre><code>cd myblog\\nmkdir -p node_modules # create node_modules if not exists\\nsudo npm link ~/code/kizz-helloworld/</code></pre>\\n<h3 id=\\\"update-config\\\">update config</h3>\\n<pre><code>plugins:\\n    - kizz-helloworld</code></pre>\\n\",\"title\":\"Middleware Guide\",\"tags\":[\"kizz\"]},{\"path\":\"doc/developer/theme-guide.md\",\"simhash\":[1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0],\"creationTime\":\"2014-08-29 17:35:24 +08:00\",\"modificationTime\":\"2014-08-29 17:35:24 +08:00\",\"content\":\"<h1 id=\\\"kizz-theme-guide\\\">Kizz Theme Guide</h1>\\n<p>Themes are just middlewares.</p>\\n\",\"title\":\"Kizz Theme Guide\",\"tags\":[\"kizz\"]},{\"path\":\"doc/logo.png\",\"simhash\":[1,1,1,0,1,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,0,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,1,0,1,1,0,1,0,0,0,1,1,0,0,1,1,1,0,1,0,0,1,0,0,1,1,1,1,0,0,0,1,0,0,1,1,0,0,1,1,1,0,1,1,0,0,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,0,1,0,0,1,1,0,1,1,1,0,1,1,0,0,1,1,0,1,0],\"creationTime\":\"2014-08-29 17:35:24 +08:00\",\"modificationTime\":\"2014-08-29 17:35:24 +08:00\"}]"}