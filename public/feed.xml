<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Kizz Documentation</title>
    <link>http://kizz.zenozeng.com/</link>
    <updated>2014-09-15T06:12:27Z</updated>
    <link rel="alternate" href="http://kizz.zenozeng.com/"/>
    <subtitle>The official documentation for Kizz.</subtitle>
    <generator>Feed for Node.js</generator>
    <entry>
        <title type="html"><![CDATA[Kizz Config Example]]></title>
        <id>http://kizz.zenozeng.com/Getting%20Started/config.html</id>
        <link href="http://kizz.zenozeng.com/Getting%20Started/config.html">
        </link>
        <updated>2014-09-15T06:07:33Z</updated>
        <content type="html"><![CDATA[
<h2>comments</h2>
<h3>config/disqus.html</h3>
<pre><code class="language-html"> &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'kizzjs'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    &lt;/script&gt;
    &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
    &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
</code></pre>
<pre><code class="language-javascript">var path = require('path'),
    fs = require('co-fs');

module.exports = function(app) {
    app.use(function *(next) {

        var ctx = this;

        this.config = {
            site: {
                name: &quot;Kizz Documentation&quot;,
                description: &quot;The official documentation for Kizz.&quot;,
                url: &quot;http://kizz.zenozeng.com/&quot;
            },
            // global tags
            tags: [
                &quot;Kizz&quot;,
                &quot;API&quot;,
                &quot;generator&quot;,
                &quot;develop&quot;,
                &quot;design&quot;,
                &quot;theme&quot;
            ],
            source: &quot;doc&quot;, // defaults to source/
            target: path.join(ctx.cwd, &quot;public&quot;), // target dir
            comments: yield fs.readFile(path.join(__dirname, 'disqus.html'), {encoding: 'UTF-8'})
        };

        yield next;
    });
};
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[编译时？]]></title>
        <id>http://kizz.zenozeng.com/Design/compile.html</id>
        <link href="http://kizz.zenozeng.com/Design/compile.html">
        </link>
        <updated>2014-09-08T04:25:40Z</updated>
        <content type="html"><![CDATA[
<p>为什么不把所有的东西都丢纯前端去做，而要有一个编译时？</p>
<p>有些事情，只能编译时做：</p>
<ul>
<li><p>记录文章的发布时间、修改时间</p>
<p>如果非要在运行时做这个，则只能手工指定，那与我的初衷不符。</p></li>
<li><p>SEO</p>
<p>虽然不是那么在乎这个，但是总是希望写的东西可以被需要的人检索到。</p></li>
<li><p>Feed (RSS/Atom)</p>
<p>纯前端很难做这个的</p></li>
<li><p>fs.readdir</p></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kizz API Documentation]]></title>
        <id>http://kizz.zenozeng.com/API/API.html</id>
        <link href="http://kizz.zenozeng.com/API/API.html">
        </link>
        <updated>2014-09-04T14:00:13Z</updated>
        <content type="html"><![CDATA[
<h2>This (Context)</h2>
<h3>load order</h3>
<ul>
<li><p>this.logger</p></li>
<li><p>this.config, this.storage</p></li>
<li><p>this.newFiles, this.changedFiles, this.unchangedFiles, this.removedFiles</p></li>
</ul>
<h3>this.logger</h3>
<pre><code class="language-javascript">this.logger.trace('Entering cheese testing');
this.logger.debug('Got cheese.');
this.logger.info('Cheese is Gouda.');
this.logger.warn('Cheese is quite smelly.');
this.logger.error('Cheese is too ripe!');
this.logger.fatal('Cheese was breeding ground for listeria.');
</code></pre>
<p>see also: https://github.com/nomiddlename/log4js-node</p>
<h3>this.storage</h3>
<pre><code class="language-javascript">var str = this.storage.getItem('key');
this.storage.setItem('key2', 'STRING');
</code></pre>
<h3>this.cache</h3>
<pre><code class="language-javascript">var str = this.cache.getItem('key');
this.cache.setItem('key2', 'STRING');
</code></pre>
<h3>this.newFiles</h3>
<pre><code class="language-javascript">[
    {
        path: 'path of file A',
        modificationTime: 'YYYY-MM-DD H:mm:ss Z',
        creationTime: 'YYYY-MM-DD H:mm:ss Z'
    },
    {}
]
</code></pre>
<h3>this.changedFiles</h3>
<pre><code class="language-javascript">[
    {
        path: 'path of file A',
        modificationTime: 'YYYY-MM-DD H:mm:ss Z',
        creationTime: 'YYYY-MM-DD H:mm:ss Z'
    },
    {}
]
</code></pre>
<h3>this.unchangedFiles</h3>
<pre><code class="language-javascript">[
    {
        path: 'path of file A',
        modificationTime: 'YYYY-MM-DD H:mm:ss Z',
        creationTime: 'YYYY-MM-DD H:mm:ss Z',
        content: &quot;html&quot;, // by kizz-markdown
        title: &quot;title&quot;, // by kizz-markdown
        tags: [&quot;tag1&quot;, &quot;tag2&quot;] // front yaml or kizz-guess-tags
    },
    {}
]
</code></pre>
<h3>this.removedFiles</h3>
<pre><code class="language-javascript">[
    {
        path: 'path of file A',
        modificationTime: 'YYYY-MM-DD H:mm:ss Z',
        creationTime: 'YYYY-MM-DD H:mm:ss Z',
        content: &quot;html&quot;, // by kizz-markdown
        title: &quot;title&quot;, // by kizz-markdown
        tags: [&quot;tag1&quot;, &quot;tag2&quot;] // front yaml or kizz-guess-tags
    },
    {}
]
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kizz Middleware Guide]]></title>
        <id>http://kizz.zenozeng.com/API/middleware-guild.html</id>
        <link href="http://kizz.zenozeng.com/API/middleware-guild.html">
        </link>
        <updated>2014-09-04T13:59:30Z</updated>
        <content type="html"><![CDATA[
<h2>create plugin</h2>
<pre><code class="language-bash">mkdir kizz-helloworld
cd kizz-helloworld
</code></pre>
<h3>create package.json</h3>
<pre><code class="language-bash">npm init
</code></pre>
<h3>create index.js</h3>
<pre><code class="language-bash">gedit index.js
</code></pre>
<pre><code class="language-javascript">module.exports = function(app) {
    app.when(function *() {
        return true;
    }).use(function *(next) {
        console.log(&quot;Hello World&quot;);
        yield next;
    });
}
</code></pre>
<h3>npm link</h3>
<pre><code class="language-bash">cd myblog
mkdir -p node_modules # create node_modules if not exists
sudo npm link ~/code/kizz-helloworld/
</code></pre>
<h3>update config</h3>
<pre><code>plugins:
    - kizz-helloworld
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Storage and Cache]]></title>
        <id>http://kizz.zenozeng.com/API/storage.html</id>
        <link href="http://kizz.zenozeng.com/API/storage.html">
        </link>
        <updated>2014-09-05T06:46:45Z</updated>
        <content type="html"><![CDATA[
<p>Kizz uses <a href="https://github.com/zenozeng/version-storage">VersionStorage</a> for Storage and Cache.</p>
<p>Storage are saved in <code>./.kizz/storage/</code> and Cache are saved in <code>./.kizz/cache/</code>.
Storage and Cache have same API, but Cache will be cleared when <code>kizz rebuild</code>.</p>
<h2>Usage</h2>
<h3>Storage</h3>
<pre><code class="language-javascript">var upgrade = function(storage) {
    var oldVersion = storage.version;
    if(oldVersion &lt; 1) {
        // Version 1 is the first version of the database.
        storage.setItem('hello', '[1, 2, 3]');
    }
    if(oldVersion &lt; 2) {
        // Version 2 changes the data structure of `hello`
        var hello = storage.getItem('hello');
        // do some remaping
        storage.setItem('hello', newhello);
    }
    if(oldVersion &lt; 3) {
        // Version 3 changes the name of `hello`
        var hello = storage.getItem('hello');
        storage.removeItem('hello');
        storage.setItem('world', hello);
    }
    storage.setVersion(3);
};

var storage = new this.Storage('YOUR_UNIQUE_ID/DB_NAME', upgrade);
var sth = storage.getItem('sth');
storage.setItem('sth', 'STRING');
storage.removeItem('sth');
</code></pre>
<h3>Cache</h3>
<p><strong>Note: Cache will be cleared when <code>kizz rebuild</code>.</strong></p>
<pre><code class="language-javascript">var cache = new this.Cache('YOUR_UNIQUE_ID/DB_NAME', upgrade);
var sth = cache.getItem('sth');
cache.setItem('sth', 'STRING');
cache.removeItem('sth');
</code></pre>
]]></content>
    </entry>
</feed>